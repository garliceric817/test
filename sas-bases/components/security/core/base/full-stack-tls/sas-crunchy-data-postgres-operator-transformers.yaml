---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sas-pgcluster-full-stack-tls-transformer
patch: |-
  - op: replace
    path: /spec/certframe
    value:
      containers:
      - envFrom:
        - configMapRef:
            name: sas-tls-config
        volumeMounts:
        - name: security
          mountPath: /security
      initContainers:
      - name: sas-certframe
        image: sas-certframe
        env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        - name: SAS_CERTIFICATE_SECRET_NAME
          value: "{{.ClusterName}}-tls-secret"
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config
        - configMapRef:
            name: sas-certframe-user-config
        - configMapRef:
            name: sas-certframe-config
        volumeMounts:
        - name: certframe-token
          mountPath: /certframe-token
        - name: security
          mountPath: /security
        - name: customer-provided-ca-certificates
          mountPath: /customer-provided-ca-certificates
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - name: security
        emptyDir: {}
      - name: customer-provided-ca-certificates
        configMap:
          name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/tls/caSecret
    value: sas-crunchy-data-postgres-tls-secret
  - op: add
    path: /spec/tls/tlsSecret
    value: sas-crunchy-data-postgres-tls-secret
target:
  kind: Pgcluster
  group: crunchydata.com
  name: sas-crunchy-data-postgres
---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sas-postgres-operator-full-stack-tls-transformer
patch: |-
  - op: add
    path: /spec/template/spec/initContainers/0
    value:
      name: sas-certframe
      image: sas-certframe
      env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      - name: SAS_CERTIFICATE_SECRET_NAME
        value: pgo.tls
      envFrom:
      - configMapRef:
          name: sas-certframe-config
      - configMapRef:
          name: sas-certframe-ingress-certificate-config
      - configMapRef:
          name: sas-certframe-user-config
      volumeMounts:
      - name: certframe-token
        mountPath: /certframe-token
      - name: security
        mountPath: /security
      - name: customer-provided-ca-certificates
        mountPath: /customer-provided-ca-certificates
      resources:
        requests:
          memory: "50Mi"
          cpu: "50m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: certframe-token
      secret:
        secretName: sas-certframe-token
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: security
      emptyDir: {}
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: customer-provided-ca-certificates
      configMap:
        name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /security
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
      subPath: cacerts
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
      subPath: private
  - op: add
    path: /spec/template/metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: replace
    path: /spec/template/metadata/annotations/prometheus.io~1scheme
    value: https
  - op: add
    path: /spec/template/spec/containers/0/envFrom/0
    value:
      configMapRef:
        name: sas-tls-config
  - op: replace
    path: /spec/template/spec/containers/0/env/5
    value:
      name: TLS_CA_TRUST
      value: /security/trustedcerts.pem
  - op: replace
    path: /spec/template/spec/containers/0/env/6
    value:
      name: TLS_NO_VERIFY
      value: "false"
  - op: remove
    path: /spec/template/spec/containers/0/env/7
  - op: replace
    path: /spec/template/spec/containers/0/livenessProbe/httpGet/scheme
    value: HTTPS
  - op: replace
    path: /spec/template/spec/containers/0/readinessProbe/httpGet/scheme
    value: HTTPS
  - op: add
    path: /spec/template/spec/containers/1/env/-
    value:
      name: DATABASE_SSL_ENABLED
      value: "true"
target:
  kind: Deployment
  name: sas-crunchy-data-postgres-operator
