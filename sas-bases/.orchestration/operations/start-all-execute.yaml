apiVersion: orchestration.sas.com/v2beta7
kind: LifecycleOperation
metadata:
  annotations:
    sas.com/component-name: sas-k8s-common
    sas.com/component-version: 2.56.2-20220919.1663599580201
  creationTimestamp: null
  name: start-all-execute
spec:
  args:
  - name: namespace
  - name: timeout
  steps:
  - args:
    - start-all-scale
    - --namespace
    - $namespace
    - --timeout
    - $timeout
    cmd: run
  - args:
    - patch
    - --namespace
    - $namespace
    - cronjobs
    - $resource.Name
    - --patch
    - (print "{\"spec\":{\"suspend\":" (.LastAppliedConfigurationValue $resource "{.spec.suspend}" "false") "}}")
    cmd: kubectl
    withClusterResources:
      group: batch
      labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
      namespace: $namespace
      resource: cronjobs
  - args:
    - patch
    - --namespace
    - $namespace
    - casdeployments
    - $resource.Name
    - --type
    - json
    - --patch
    - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
    cmd: kubectl
    when: (.ClusterDefinitions (((.NewClusterDefinitionsIterationSpec).WithGroup "viya.sas.com").WithResource "casdeployments"))
    withClusterResources:
      group: viya.sas.com
      labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
      namespace: $namespace
      resource: casdeployments
  - args:
    - patch
    - --namespace
    - $namespace
    - opendistroclusters
    - $resource.Name
    - --type
    - json
    - --patch
    - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
    cmd: kubectl
    when: (.ClusterDefinitions (((.NewClusterDefinitionsIterationSpec).WithGroup "opendistro.sas.com").WithResource "opendistroclusters"))
    withClusterResources:
      group: opendistro.sas.com
      labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
      namespace: $namespace
      resource: opendistroclusters
  - args:
    - patch
    - --namespace
    - $namespace
    - daemonsets
    - $resource.Name
    - --patch
    - (print "{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"sas.com/scale-class\":\"" (.LastAppliedConfigurationValue $resource "{.spec.template.spec.nodeSelector.sas\\.com/scale-class}" "ignored") "\"}}}}}" )
    cmd: kubectl
    withClusterResources:
      group: apps
      labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
      lastAppliedConfiguration:
        jsonPath: '{.spec.template.spec.nodeSelector.sas\\.com/scale-class}'
      namespace: $namespace
      resource: daemonsets
  - args:
    - patch
    - --namespace
    - $namespace
    - daemonsets
    - $resource.Name
    - --type
    - json
    - --patch
    - '[{"op":"remove", "path": "/spec/template/spec/nodeSelector/sas.com~1scale-class"}]'
    cmd: kubectl
    withClusterResources:
      currentConfiguration:
        isMissing: false
        jsonPath: '{.spec.template.spec.nodeSelector.sas\\.com/scale-class}'
      group: apps
      labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
      lastAppliedConfiguration:
        isMissing: true
        jsonPath: '{.spec.template.spec.nodeSelector.sas\\.com/scale-class}'
      namespace: $namespace
      resource: daemonsets
  - args:
    - wait
    - --namespace
    - $namespace
    - --for
    - condition=ready
    - pod
    - --selector
    - app.kubernetes.io/name=sas-data-server-operator
    - --timeout
    - $timeout
    cmd: kubectl
  - args:
    - wait
    - --namespace
    - $namespace
    - --for
    - condition=ready
    - pod
    - --selector
    - app.kubernetes.io/name=sas-crunchy-data-postgres-operator
    - --timeout
    - $timeout
    cmd: kubectl
  - args:
    - patch
    - --namespace
    - $namespace
    - pgclusters.webinfdsvr.sas.com
    - $resource.Name
    - --type
    - json
    - --patch
    - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
    cmd: kubectl
    when: (.ClusterDefinitions (((.NewClusterDefinitionsIterationSpec).WithGroup "webinfdsvr.sas.com").WithResource "pgclusters"))
    withClusterResources:
      group: webinfdsvr.sas.com
      labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
      namespace: $namespace
      resource: pgclusters
  - args:
    - patch
    - --namespace
    - $namespace
    - distributedredisclusters.redis.kun
    - $resource.Name
    - --type
    - json
    - --patch
    - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
    cmd: kubectl
    when: (.ClusterDefinitions (((.NewClusterDefinitionsIterationSpec).WithGroup "redis.kun").WithResource "distributedredisclusters"))
    withClusterResources:
      group: redis.kun
      labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
      namespace: $namespace
      resource: distributedredisclusters
